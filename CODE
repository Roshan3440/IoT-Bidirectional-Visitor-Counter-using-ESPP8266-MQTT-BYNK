/* Fill in information from Blynk Device Info here */
#define BLYNK_TEMPLATE_ID "TMPL3T6zY_-vE"
#define BLYNK_TEMPLATE_NAME "VISITOR COUNTER"
#define BLYNK_AUTH_TOKEN "3SO7FojCSU_LU9jVYUFxitoJ4rHmNBKF"

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Blynk.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

 char auth[] = BLYNK_AUTH_TOKEN;       // You should get Auth Token in the Blynk App.
char ssid[] = "nim";                       // Your WiFi credentials.
char pass[] = "12345678pa";


#define SCREEN_WIDTH 128    // OLED display width, in pixels
#define SCREEN_HEIGHT 64    // OLED display height, in pixels
#define OLED_RESET -1       // Reset pin # (or -1 if sharing Arduino reset pin)
#define Screen_Address 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define inSensor 14 //D5
#define outSensor 12//d6

int pinStateCurrent   = LOW; // current state of pin
int pinStatePrevious  = LOW; // previous state of pin

int pinStateCurrent1   = LOW; // current state of pin
int pinStatePrevious1  = LOW; // previous state of pin

int countin = 0;
int countout = 0;

 
int in;
int out;
int now;



void setup() {
  //debug console
  Serial.begin(115200);
   Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  delay(1000);  // wait a second
  pinMode(inSensor, INPUT);
  pinMode(outSensor,INPUT);
 
  
  // initialize the OLED object
  if(!display.begin(SSD1306_SWITCHCAPVCC, Screen_Address)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

   Serial.println("Visitor Counter ");
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(20, 20);
  display.print("Visitor");
  display.setCursor(20, 40);
  display.print("Counter");
  display.display();
  delay(2000);
}

void loop() {
   Blynk.run(); // Initiates Blynk

 pinStatePrevious = pinStateCurrent; // store old state
  pinStateCurrent = digitalRead(inSensor);   // read new state

  pinStatePrevious1 = pinStateCurrent1; // store old state
  pinStateCurrent1 = digitalRead(outSensor);   // read new state
if (pinStatePrevious == 0 && pinStateCurrent == 1)
  {
    in = countin++;
    
  }

  if (pinStatePrevious1 == 0 && pinStateCurrent1 == 1)
  {
    out = countout++;
    
  }
  
   now = in - out;

   if (now <= 0)
  {
      display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0, 15);
    display.print("No Visitor");
   
    display.display();
    Serial.println("No Visitors!");
    delay(500);
  }
  else
  {
  
   display.clearDisplay();
    display.setTextColor(WHITE);
 
    display.setTextSize(1);
    display.setCursor(15, 0);
    display.print("Current Visitor");
    display.setTextSize(2);
    display.setCursor(50, 15);
    display.print(now);
 
    display.setTextSize(1);
    display.setCursor(0, 40);
    display.print("IN: ");
    display.print(in);

 display.setTextSize(1);
    display.setCursor(70, 40);
    display.print("OUT: ");
    display.print(out);
    
    display.display();
    Serial.print("Current Visitor: ");
    Serial.println(now);
    Serial.print("IN: ");
    Serial.println(in);
      delay(500);
       Serial.print("OUT: ");
    Serial.println(out);
    delay(500);
  }
   Blynk.virtualWrite(V0, in); // Visitors In
  Blynk.virtualWrite(V1, out); // Visitors Out
  Blynk.virtualWrite(V2, now); // Current Visitors
  delay(1000); 
}
